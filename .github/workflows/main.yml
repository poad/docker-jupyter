name: Docker build and push
 
on:
  push:
    branches:
    - main 
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '15 0 * * 6'

jobs:
  docker_build:
    strategy:
      matrix:
        versions: [
          { dir: 'all-in-one/jdk8', tag: 'all-in-one-jdk8', platforms: 'linux/amd64,linux/arm64', target: '' },
          { dir: 'all-in-one/jdk11', tag: 'all-in-one-jdk11', platforms: 'linux/amd64,linux/arm64', target: '' },
          { dir: 'all-in-one/jdk17', tag: 'all-in-one-jdk17', platforms: 'linux/amd64,linux/arm64', target: '' },
          { dir: 'java', tag: 'java', platforms: 'linux/amd64,linux/arm64', target: '' },
          { dir: 'rust', tag: 'rust', platforms: 'linux/amd64,linux/arm64', target: '' },
          { dir: 'scala', tag: 'scala', platforms: 'linux/amd64,linux/arm64', target: '' },
          { dir: 'nodejs', tag: 'nodejs', platforms: 'linux/amd64,linux/arm64', target: '' },
          { dir: 'nodejs', tag: 'nodejs', platforms: 'linux/amd64,linux/arm64', target: 'typescript' }
        ]    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true

    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1 
      with:
        username: poad
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: "Build ${{ matrix.versions.tag }}"
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
      uses: docker/build-push-action@v2
      with:
        push: false
        pull: true
        context: ${{ matrix.versions.dir }}
        platforms: ${{ matrix.versions.platforms }}
        tags: poad/docker-jupyter:${{ matrix.versions.tag }}
        target: ${{ matrix.versions.target }}
        build-args: |
          BUILDKIT_INLINE_CACHE=1
  
    - name: "Build and push ${{ matrix.versions.tag }}"
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v2
      with:
        push: true
        pull: true
        context: ${{ matrix.versions.dir }}
        platforms: ${{ matrix.versions.platforms }}
        tags: poad/docker-jupyter:${{ matrix.versions.tag }}
        target: ${{ matrix.versions.target }}
        build-args: |
          BUILDKIT_INLINE_CACHE=1
